=========================================================
<!==Опция задает что делать с таблицей при удалении модели -->

on_delete = models.CASCADE: автоматически удаляет строку из зависимой таблицы, если удаляется связанная строка из главной таблицы

on_delete = models.PROTECT: блокирует удаление строки из главной таблицы, если с ней связаны какие-либо строки из зависимой таблицы

on_delete =models.SET_NULL: устанавливает NULL при удалении связанной строка из главной таблицы

on_delete = models.SET_DEFAULT: устанавливает значение по умолчанию для внешнео ключа в зависимой таблице. В этом случае для этого столбца должно быть задано значение по умолчанию

on_delete = models.DO_NOTHING: при удалении связанной строки из главной таблицы не производится никаких действий в зависимой таблице

==========================================================
<!--Операции с моделями-->

# получение id связанной с товаром компании
Product.objects.get(id=1).company.id
 
# получение названия связанной с товаром компании
Product.objects.get(id=1).company.name
 
# получение товаров, которые принадлежат к компании "Apple"
Product.objects.filter(company__name="Apple")

from .models import Company, Product
 
apple = Company.objects.get(name="Apple")
 
# получение всех товаров
apple.product_set.all()
 
# получение количества товаров
apple.product_set.count()
 
# получение товаров, название которых начинается на "iPhone"
apple.product_set.filter(name__startwith="iPhone")

# создаем объект Company
apple = Company.objects.create(name="Apple")
 
 
# создание товара определенной компании
apple.product_set.create(name="iPhone 8", price=67890)
 
# отдельное создание объекта с последующим добавлением
ipad = Product(name="iPad", price=34560)
# при добавлении необходимо указать параметр bulk =False
apple.product_set.add(ipad, bulk =False)
 
# исключает из компании все товары, 
# при этом товары остаются в бд, просто им не назначена компания
# работает, если в зависимой модели ForeignKey(Company, null = True)
# apple.product_set.clear()
 
# то же самое, только в отношении одного объекта
# ipad = Product.objects.get(name="iPad")
# apple.product_set.remove(ipad)
<!--
#add(): добавляет связь между объектом зависимой модели и объектом главной модели. В своей сути этот метод фактически вызывает для модели метод update() для добавления связи. Однако это #требует, чтобы обе модели уже были в базе данных. И чтобы обойти это ограничение, применяется параметр bulk=False, для того, чтобы объект зависимой модели сразу был добавлен и для него #была установлена связь.

#clear(): удаляет связь между всеми объектами зависимой модели и объектом главной модели. При этом сами объекты зависимой модели остаются в базе данных, и для их внешнего ключа #устанавливается значение NULL. Поэтому данный метод будет работать, если в самой зависимой модели при установки связи использовался параметр null=True: ForeignKey(Company, null = True).

#remove(): также, как и clear() удаляет связь, только между одним объектом зависимой модели и объектом главной модели. При этом также все объекты остаются в бд. И также в самой зависимой #модели при установки связи должен использоваться параметр null=True
-->